# This is a basic workflow to help you get started with Actions

name: Automatic Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      # this flutter action does the heavy lifting for us
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'  
      # get packages as you used to in your computer
      - run: flutter pub get
      # Now build apk
      - run: flutter build apk --split-per-abi
      # now relase the just created build
      - name: Create a Release APK
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "Build dall'ultimo commit"
